name: Mirror to Azure DevOps

on:
  push:
    branches: [ main, develop, feature/* ]
  delete:
    branches: [ main, develop, feature/* ]
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force synchronization even if no changes'
        required: false
        default: 'false'
        type: boolean

env:
  AZURE_DEVOPS_ORG: 'franklinmarceloferrer'
  AZURE_DEVOPS_PROJECT: 'educsme'
  AZURE_DEVOPS_REPO: 'educsme'

jobs:
  mirror:
    name: üîÑ Mirror to Azure DevOps
    runs-on: ubuntu-latest
    if: github.repository == 'franklinmarceloferrer-cmd/educsme'
    
    steps:
    - name: üì• Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: üîß Configure Git
      run: |
        git config --global user.email "franklinmarceloferrer@gmail.com"
        git config --global user.name "Franklin Ferrer"
        git config --global init.defaultBranch main
    
    - name: üîó Add Azure DevOps Remote
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        # Remove existing azure remote if it exists
        git remote remove azure 2>/dev/null || true
        
        # Add Azure DevOps remote
        AZURE_REPO_URL="https://franklinmarceloferrer:${AZURE_DEVOPS_PAT}@dev.azure.com/${AZURE_DEVOPS_ORG}/${AZURE_DEVOPS_PROJECT}/_git/${AZURE_DEVOPS_REPO}"
        git remote add azure "$AZURE_REPO_URL"
        
        # Verify remote was added
        git remote -v
    
    - name: üîç Check Repository Status
      run: |
        echo "üìä Repository Information:"
        echo "- Current branch: $(git branch --show-current)"
        echo "- Total branches: $(git branch -a | wc -l)"
        echo "- Total commits: $(git rev-list --all --count)"
        echo "- Latest commit: $(git log -1 --oneline)"
        echo "- Repository size: $(du -sh .git | cut -f1)"
    
    - name: üöÄ Mirror Branches to Azure DevOps
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        echo "üîÑ Starting mirror process..."
        
        # Get all local branches
        LOCAL_BRANCHES=$(git branch -r | grep -v 'origin/HEAD' | sed 's/origin\///' | tr '\n' ' ')
        echo "üìã Branches to mirror: $LOCAL_BRANCHES"
        
        # Push all branches
        echo "üì§ Pushing all branches..."
        if git push azure --all --force; then
          echo "‚úÖ Successfully pushed all branches"
        else
          echo "‚ùå Failed to push branches"
          exit 1
        fi
        
        # Push all tags
        echo "üè∑Ô∏è Pushing all tags..."
        if git push azure --tags --force; then
          echo "‚úÖ Successfully pushed all tags"
        else
          echo "‚ö†Ô∏è Failed to push tags (may not exist)"
        fi
    
    - name: üîç Verify Mirror Success
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        echo "üîç Verifying mirror success..."
        
        # List remote branches in Azure DevOps
        echo "üìã Azure DevOps branches:"
        git ls-remote azure | grep 'refs/heads' | sed 's/.*refs\/heads\//- /' || echo "No branches found"
        
        # Compare commit counts
        GITHUB_COMMITS=$(git rev-list --all --count)
        echo "üìä GitHub commits: $GITHUB_COMMITS"
        
        echo "‚úÖ Mirror verification completed"
    
    - name: üìä Mirror Summary
      if: always()
      run: |
        echo "## üîÑ Mirror Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Azure DevOps URL**: https://dev.azure.com/${{ env.AZURE_DEVOPS_ORG }}/${{ env.AZURE_DEVOPS_PROJECT }}/_git/${{ env.AZURE_DEVOPS_REPO }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Mirrored At**: $(date -u)" >> $GITHUB_STEP_SUMMARY
    
    - name: üö® Notify on Failure
      if: failure()
      run: |
        echo "‚ùå Mirror to Azure DevOps failed!"
        echo "Please check the following:"
        echo "1. Azure DevOps PAT is valid and not expired"
        echo "2. PAT has appropriate permissions (Code: Read & Write)"
        echo "3. Azure DevOps repository exists and is accessible"
        echo "4. Network connectivity to Azure DevOps"
        
        # Create an issue or notification here if needed
        exit 1

  # Optional: Trigger Azure DevOps pipeline after successful mirror
  trigger-azure-pipeline:
    name: üöÄ Trigger Azure DevOps Pipeline
    runs-on: ubuntu-latest
    needs: mirror
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - name: üîó Trigger Azure DevOps Pipeline
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        echo "üöÄ Triggering Azure DevOps pipeline..."
        
        # This would trigger the Azure DevOps pipeline via REST API
        # Uncomment and configure if you want automatic pipeline triggers
        
        # PIPELINE_URL="https://dev.azure.com/${AZURE_DEVOPS_ORG}/${AZURE_DEVOPS_PROJECT}/_apis/pipelines/{pipeline-id}/runs?api-version=6.0"
        # curl -X POST "$PIPELINE_URL" \
        #   -H "Authorization: Basic $(echo -n :${AZURE_DEVOPS_PAT} | base64)" \
        #   -H "Content-Type: application/json" \
        #   -d '{"resources": {"repositories": {"self": {"refName": "refs/heads/'${{ github.ref_name }}'"}}}}' \
        #   || echo "‚ö†Ô∏è Failed to trigger Azure DevOps pipeline"
        
        echo "‚ÑπÔ∏è Azure DevOps pipeline trigger is disabled by default"
        echo "Enable it by uncommenting the curl command above and setting the correct pipeline ID"
