version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: educsms-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - educsms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # EduCMS API
  educsms-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: educsms-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=EduCMSDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - Jwt__Key=DevelopmentKeyThatIsAtLeast32CharactersLongForDocker!
      - Jwt__Issuer=EduCMS.Api.Docker
      - Jwt__Audience=EduCMS.Client.Docker
    ports:
      - "5000:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - educsms-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis Cache (Optional - for future caching implementation)
  redis:
    image: redis:7-alpine
    container_name: educsms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - educsms-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  educsms-network:
    driver: bridge
